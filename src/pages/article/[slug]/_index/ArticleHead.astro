---
import type { CollectionEntry } from "astro:content";
import type { BlogPosting, BreadcrumbList, WithContext } from "schema-dts";
import { SITE_NAME } from "../../../../constant";

interface Props {
  article: CollectionEntry<"article">;
}

const { article } = Astro.props;

if (Astro.site === undefined) {
  throw new Error(
    "Site URL is unset. Please set the site URL in the Astro config.",
  );
}
const canonicalUrl = new URL(Astro.url.pathname, Astro.site).toString();

const ogImageUrl = `${Astro.url}/og.png`;
---

<title>{article.data.title} | {SITE_NAME}</title>
<meta name="description" content={article.data.description} />
<meta property="og:title" content={article.data.title} />
<meta property="og:type" content="article" />
<meta property="og:image" content={ogImageUrl} />
<meta property="og:description" content={article.data.description} />
<meta
  property="article:published_time"
  content={article.data.publishedAt.toISOString()}
/>
<meta
  property="article:modified_time"
  content={article.data.modifiedAt.toISOString()}
/>
<meta property="article:author" content="ciffelia" />
{article.data.tags.map((tag) => <meta property="article:tag" content={tag} />)}
<meta name="twitter:card" content="summary_large_image" />
{!article.data.isPublished && <meta name="robots" content="noindex" />}
<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: [
      {
        "@type": "ListItem",
        position: 1,
        name: article.data.title,
        item: canonicalUrl,
      },
    ],
  } satisfies WithContext<BreadcrumbList>)}
/>
<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    headline: article.data.title,
    datePublished: article.data.publishedAt.toISOString(),
    dateModified: article.data.modifiedAt.toISOString(),
    image: [ogImageUrl],
    author: {
      "@type": "Person",
      name: "ciffelia",
      url: "https://ciffelia.com",
    },
  } satisfies WithContext<BlogPosting>)}
/>
